// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// BannersRepository is an autogenerated mock type for the BannersRepository type
type BannersRepository struct {
	mock.Mock
}

// AddToSlot provides a mock function with given fields: bannerID, slotID
func (_m *BannersRepository) AddToSlot(bannerID int, slotID int) error {
	ret := _m.Called(bannerID, slotID)

	var r0 error
	if rf, ok := ret.Get(0).(func(int, int) error); ok {
		r0 = rf(bannerID, slotID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DropFromSlot provides a mock function with given fields: bannerID, slotID
func (_m *BannersRepository) DropFromSlot(bannerID int, slotID int) error {
	ret := _m.Called(bannerID, slotID)

	var r0 error
	if rf, ok := ret.Get(0).(func(int, int) error); ok {
		r0 = rf(bannerID, slotID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAllBanners provides a mock function with given fields: slotID
func (_m *BannersRepository) GetAllBanners(slotID int) ([]int, error) {
	ret := _m.Called(slotID)

	var r0 []int
	if rf, ok := ret.Get(0).(func(int) []int); ok {
		r0 = rf(slotID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]int)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(slotID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
